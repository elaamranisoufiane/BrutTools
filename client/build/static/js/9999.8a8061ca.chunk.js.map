{"version":3,"file":"static/js/9999.8a8061ca.chunk.js","mappings":"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","sources":["pages/dashboradGuest/Cv/CVDesigner.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport axios from 'axios';\r\nimport mainBigLogo from '../../../assets/mainbiglogo.png'\r\n\r\nimport modern from '../../../assets/theme/modern-preview.PNG';\r\nimport classic from '../../../assets/theme/classic-preview.PNG';\r\nimport minimalist from '../../../assets/theme/minimalist-preview.PNG';\r\nimport elegant from '../../../assets/theme/elegant-preview.PNG';\r\nimport Purplix from '../../../assets/theme/purplix-preview.PNG';\r\nimport Greedle from '../../../assets/theme/greedle-preview.PNG';\r\n\r\nconst themePreviews = {\r\n    modern: modern,\r\n    classic: classic,\r\n    minimalist: minimalist,\r\n    elegant: elegant,\r\n    Purplix: Purplix,\r\n    Greedle: Greedle,\r\n};\r\n// ininstall this \r\n// npm uninstall html2canvas\r\n// npm uninstall jspdf\r\n\r\n\r\n//langugae option \r\n\r\n\r\nconst CVDesigner = () => {\r\n\r\n    const themes = [\r\n        { value: 'modern', label: 'Modern' },\r\n        { value: 'classic', label: 'Classic' },\r\n        { value: 'minimalist', label: 'Minimalist' },\r\n        { value: 'elegant', label: 'Elegant' },\r\n        { value: 'Purplix', label: 'Purplix' },\r\n        { value: 'Greedle', label: 'Greedle' }\r\n    ];\r\n\r\n\r\n    const [cvData, setCvData] = useState({\r\n        name: 'John Doe',                          // Example name\r\n        title: 'Full-Stack Developer',             // Example job title\r\n        email: 'john.doe@example.com',             // Example email address\r\n        phone: '+1 123 456 7890',                  // Example phone number\r\n        dateOfBirth: '1990-05-15',                 // Example date of birth\r\n        nationality: 'American',                   // Example nationality\r\n        about: 'Passionate full-stack developer with 5+ years of experience in building scalable web applications.', // Example about section\r\n        languages: ['English', 'Spanish'],         // Example languages\r\n        qualities: ['Team player', 'Problem solver', 'Fast learner'], // Example qualities\r\n        experiences: [                             // Example work experiences\r\n            'Currently a Senior Developer at TechCorp Inc. since January 2021, specializing in full-stack development with React and Node.js, previously a Frontend Developer at Web Solutions ',\r\n            'from June 2018 to December 2020, focusing on building responsive user interfaces and optimizing web performance.'\r\n        ],\r\n        education: [                               // Example education details\r\n            'Holds a Bachelor of Computer Science from the University of Technology, completed between September 2012 and June 2016.'\r\n        ],\r\n        skills: ['JavaScript', 'React', 'Node.js', 'CSS', 'SQL'],  // Example skills\r\n        photo: mainBigLogo                                // Placeholder for photo (could be a file or URL)\r\n    });\r\n\r\n\r\n    const [selectedDesign, setSelectedDesign] = useState('modern');\r\n    const [showInfo, setShowInfo] = useState(true);\r\n    const cvRef = useRef(null);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCvData(prevData => ({\r\n            ...prevData,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleListChange = (section, index, value) => {\r\n        setCvData(prevData => {\r\n            const newSection = [...prevData[section]];\r\n            newSection[index] = value;\r\n            return {\r\n                ...prevData,\r\n                [section]: newSection\r\n            };\r\n        });\r\n    };\r\n\r\n    const addListItem = (section) => {\r\n        setCvData(prevData => ({\r\n            ...prevData,\r\n            [section]: [...prevData[section], '']\r\n        }));\r\n    };\r\n\r\n    const removeListItem = (section, index) => {\r\n        setCvData(prevData => ({\r\n            ...prevData,\r\n            [section]: prevData[section].filter((_, i) => i !== index)\r\n        }));\r\n    };\r\n\r\n    const handlePhotoUpload = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setCvData(prevData => ({\r\n                    ...prevData,\r\n                    photo: reader.result\r\n                }));\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n\r\n    //################# to delete #########################\"\"\r\n    // const [message, setMessage] = useState('');\r\n    // const [messages, setMessages] = useState([]);\r\n\r\n    // const fetchMessages = async () => {\r\n    //     try {\r\n    //         const response = await fetch('https://bruttools.com/api/gm2');\r\n    //         const data = await response.json();\r\n    //         console.log(data);\r\n    //         setMessages(data);\r\n    //     } catch (error) {\r\n    //         console.error('Error fetching messages:', error);\r\n    //     }\r\n    // };\r\n\r\n    // const postMessage = async () => {\r\n    //     try {\r\n    //         await fetch('https://bruttools.com/api/messages', {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //             },\r\n    //             body: JSON.stringify({ message }),\r\n    //         });\r\n    //         setMessage('');\r\n    //         fetchMessages();\r\n    //     } catch (error) {\r\n    //         console.error('Error posting message:', error);\r\n    //     }\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     fetchMessages();\r\n    // }, []);\r\n\r\n\r\n    //################# to delete ##########################\"\"\r\n\r\n    const renderDesign = () => {\r\n        switch (selectedDesign) {\r\n            case 'classic':\r\n                return (\r\n                    <div className=\"bg-gray-100 p-8 rounded-lg shadow-lg\" ref={cvRef}>\r\n\r\n                        <div className=\"flex items-center mb-6\">\r\n                            <div className=\"w-1/3\">\r\n                                {cvData.photo && <img src={cvData.photo} alt=\"Profile\" className=\"w-32 h-32 rounded-full border-2 border-gray-300 object-cover\" />}\r\n                            </div>\r\n                            <div className=\"w-2/3 pl-6\">\r\n                                <h1 className=\"text-4xl font-bold mb-2\">{cvData.name}</h1>\r\n                                <h2 className=\"text-2xl text-gray-700 mb-4\">{cvData.title}</h2>\r\n                                <p className=\"text-gray-600\">{cvData.email} | {cvData.phone}</p>\r\n                                <p className=\"text-gray-600\">Born on: {cvData.dateOfBirth} | Nationality: {cvData.nationality}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <h3 className=\"text-2xl font-semibold mt-6 mb-2\">About Me</h3>\r\n                        <p className=\"text-gray-700\">{cvData.about}</p>\r\n\r\n                        <h3 className=\"text-2xl font-semibold mt-6 mb-2\">Languages</h3>\r\n                        <ul className=\"list-disc pl-6 text-gray-700\">\r\n                            {cvData.languages.map((lang, index) => (\r\n                                <li key={index}>{lang}</li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <h3 className=\"text-2xl font-semibold mt-6 mb-2\">Qualities</h3>\r\n                        <ul className=\"list-disc pl-6 text-gray-700\">\r\n                            {cvData.qualities.map((quality, index) => (\r\n                                <li key={index}>{quality}</li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <h3 className=\"text-2xl font-semibold mt-6 mb-2\">Professional Experiences</h3>\r\n                        {cvData.experiences.map((exp, index) => (\r\n                            <div key={index} className=\"mb-4 text-gray-700\">\r\n                                <h4 className=\"font-semibold\">{exp}</h4>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <h3 className=\"text-2xl font-semibold mt-6 mb-2\">Education</h3>\r\n                        {cvData.education.map((edu, index) => (\r\n                            <div key={index} className=\"mb-4 text-gray-700\">\r\n                                <h4 className=\"font-semibold\">{edu}</h4>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <h3 className=\"text-2xl font-semibold mt-6 mb-2\">Skills</h3>\r\n                        <ul className=\"list-disc pl-6 text-gray-700\">\r\n                            {cvData.skills.map((skill, index) => (\r\n                                <li key={index}>{skill}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                );\r\n            case 'minimalist':\r\n                return (\r\n                    <div className=\"bg-white p-6 rounded-lg shadow-md border border-gray-200\" ref={cvRef}>\r\n                        <div className=\"flex flex-col items-center mb-6\">\r\n                            {cvData.photo && <img src={cvData.photo} alt=\"Profile\" className=\"w-24 h-24 rounded-full border border-gray-300 object-cover mb-4\" />}\r\n                            <h1 className=\"text-2xl font-bold mb-1\">{cvData.name}</h1>\r\n                            <h2 className=\"text-lg text-gray-600 mb-2\">{cvData.title}</h2>\r\n                            <p className=\"text-gray-500\">{cvData.email} | {cvData.phone}</p>\r\n                            <p className=\"text-gray-500\">Born on: {cvData.dateOfBirth} | Nationality: {cvData.nationality}</p>\r\n                        </div>\r\n\r\n                        <h3 className=\"text-lg font-semibold mt-4 mb-2\">About Me</h3>\r\n                        <p className=\"text-gray-700\">{cvData.about}</p>\r\n\r\n                        <h3 className=\"text-lg font-semibold mt-4 mb-2\">Languages</h3>\r\n                        <ul className=\"list-disc pl-4 text-gray-700\">\r\n                            {cvData.languages.map((lang, index) => (\r\n                                <li key={index}>{lang}</li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <h3 className=\"text-lg font-semibold mt-4 mb-2\">Qualities</h3>\r\n                        <ul className=\"list-disc pl-4 text-gray-700\">\r\n                            {cvData.qualities.map((quality, index) => (\r\n                                <li key={index}>{quality}</li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <h3 className=\"text-lg font-semibold mt-4 mb-2\">Professional Experiences</h3>\r\n                        {cvData.experiences.map((exp, index) => (\r\n                            <div key={index} className=\"mb-2 text-gray-700\">\r\n                                <h4 className=\"font-semibold\">{exp}</h4>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <h3 className=\"text-lg font-semibold mt-4 mb-2\">Education</h3>\r\n                        {cvData.education.map((edu, index) => (\r\n                            <div key={index} className=\"mb-2 text-gray-700\">\r\n                                <h4 className=\"font-semibold\">{edu}</h4>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <h3 className=\"text-lg font-semibold mt-4 mb-2\">Skills</h3>\r\n                        <ul className=\"list-disc pl-4 text-gray-700\">\r\n                            {cvData.skills.map((skill, index) => (\r\n                                <li key={index}>{skill}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                );\r\n            case 'elegant':\r\n                return (\r\n                    <div className=\"bg-gray-50 p-8 rounded-lg shadow-xl border-t-4 border-indigo-500\" ref={cvRef}>\r\n                        <div className=\"flex items-center mb-8\">\r\n                            <div className=\"w-1/4\">\r\n                                {cvData.photo && <img src={cvData.photo} alt=\"Profile\" className=\"w-36 h-36 rounded-full border-4 border-indigo-300 object-cover\" />}\r\n                            </div>\r\n                            <div className=\"w-3/4 pl-6\">\r\n                                <h1 className=\"text-4xl font-extrabold mb-3\">{cvData.name}</h1>\r\n                                <h2 className=\"text-2xl text-gray-700 mb-4\">{cvData.title}</h2>\r\n                                <p className=\"text-gray-600\">{cvData.email} | {cvData.phone}</p>\r\n                                <p className=\"text-gray-600\">Born on: {cvData.dateOfBirth} | Nationality: {cvData.nationality}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <h3 className=\"text-2xl font-semibold text-indigo-600 mt-6 mb-3\">About Me</h3>\r\n                        <p className=\"text-gray-800\">{cvData.about}</p>\r\n\r\n                        <h3 className=\"text-2xl font-semibold text-indigo-600 mt-6 mb-3\">Languages</h3>\r\n                        <ul className=\"list-disc pl-6 text-gray-800\">\r\n                            {cvData.languages.map((lang, index) => (\r\n                                <li key={index}>{lang}</li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <h3 className=\"text-2xl font-semibold text-indigo-600 mt-6 mb-3\">Qualities</h3>\r\n                        <ul className=\"list-disc pl-6 text-gray-800\">\r\n                            {cvData.qualities.map((quality, index) => (\r\n                                <li key={index}>{quality}</li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <h3 className=\"text-2xl font-semibold text-indigo-600 mt-6 mb-3\">Professional Experiences</h3>\r\n                        {cvData.experiences.map((exp, index) => (\r\n                            <div key={index} className=\"mb-4 text-gray-800\">\r\n                                <h4 className=\"font-semibold\">{exp}</h4>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <h3 className=\"text-2xl font-semibold text-indigo-600 mt-6 mb-3\">Education</h3>\r\n                        {cvData.education.map((edu, index) => (\r\n                            <div key={index} className=\"mb-4 text-gray-800\">\r\n                                <h4 className=\"font-semibold\">{edu}</h4>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <h3 className=\"text-2xl font-semibold text-indigo-600 mt-6 mb-3\">Skills</h3>\r\n                        <ul className=\"list-disc pl-6 text-gray-800\">\r\n                            {cvData.skills.map((skill, index) => (\r\n                                <li key={index}>{skill}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                );\r\n            case 'modern':\r\n                return (\r\n                    <div className=\"bg-white p-6 rounded-lg shadow-lg\" ref={cvRef}>\r\n                        <div className=\"flex\">\r\n                            <div className=\"w-2/3\">\r\n                                <h1 className=\"text-3xl font-bold mb-2\">{cvData.name}</h1>\r\n                                <h2 className=\"text-xl text-gray-600 mb-4\">{cvData.title}</h2>\r\n                                <p>{cvData.email} | {cvData.phone}</p>\r\n                                <p>Born on: {cvData.dateOfBirth} | Nationality: {cvData.nationality}</p>\r\n                            </div>\r\n                            <div className=\"w-1/3\">\r\n                                {cvData.photo && <img src={cvData.photo} alt=\"Profile\" className=\"w-32 h-32 rounded-full object-cover\" />}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <h3 className=\"text-xl font-semibold mt-6 mb-2\">About Me</h3>\r\n                        <p>{cvData.about}</p>\r\n\r\n                        <h3 className=\"text-xl font-semibold mt-6 mb-2\">Languages</h3>\r\n                        <ul>\r\n                            {cvData.languages.map((lang, index) => (\r\n                                <li key={index}>{lang}</li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <h3 className=\"text-xl font-semibold mt-6 mb-2\">Qualities</h3>\r\n                        <ul>\r\n                            {cvData.qualities.map((quality, index) => (\r\n                                <li key={index}>{quality}</li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <h3 className=\"text-xl font-semibold mt-6 mb-2\">Professional Experiences</h3>\r\n                        {cvData.experiences.map((exp, index) => (\r\n                            <div key={index} className=\"mb-4\">\r\n                                <h4 className=\"font-semibold\">{exp}</h4>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <h3 className=\"text-xl font-semibold mt-6 mb-2\">Education</h3>\r\n                        {cvData.education.map((edu, index) => (\r\n                            <div key={index} className=\"mb-4\">\r\n                                <h4 className=\"font-semibold\">{edu}</h4>\r\n                            </div>\r\n                        ))}\r\n\r\n                        <h3 className=\"text-xl font-semibold mt-6 mb-2\">Skills</h3>\r\n                        <ul>\r\n                            {cvData.skills.map((skill, index) => (\r\n                                <li key={index}>{skill}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                );\r\n            case 'Purplix':\r\n                return (\r\n                    // <div className=\"bg-gradient-to-r from-green-400 to-blue-500 p-1 rounded-3xl shadow-2xl max-w-4xl mx-auto\">\r\n                    <div className=\"bg-slate-600 p-1 rounded-3xl shadow-2xl max-w-4xl mx-auto\">\r\n                        <div className=\"bg-white rounded-3xl p-8\">\r\n                            <header className=\"flex justify-between items-center mb-8\">\r\n                                <div>\r\n                                    <h1 className=\"text-4xl font-extrabold mb-2 text-transparent bg-clip-text bg-gradient-to-r from-green-500 to-blue-600\">\r\n                                        {cvData.name}\r\n                                    </h1>\r\n                                    <p className=\"text-xl text-gray-600\">{cvData.title}</p>\r\n                                    <p className=\"text-sm text-gray-500\">{cvData.email} | {cvData.phone}</p>\r\n                                    <p className=\"text-sm text-gray-500\">Born on: {cvData.dateOfBirth} | Nationality: {cvData.nationality}</p>\r\n                                </div>\r\n                                {cvData.photo && (\r\n                                    <div className=\"relative\">\r\n                                        <div className=\"w-32 h-32 rounded-full bg-gradient-to-r from-green-400 to-blue-500 flex items-center justify-center\">\r\n                                            <img src={cvData.photo} alt=\"Profile\" className=\"w-28 h-28 rounded-full object-cover\" />\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </header>\r\n\r\n                            <div className=\"grid grid-cols-3 gap-8\">\r\n                                <div className=\"col-span-2 space-y-6\">\r\n\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold mb-4 text-gray-700 flex items-center\">\r\n                                            <svg className=\"w-6 h-6 mr-2 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                                            </svg>\r\n                                            About Me\r\n                                        </h2>\r\n                                        <p className=\"text-gray-600 leading-relaxed\">{cvData.about}</p>\r\n                                    </section>\r\n\r\n                                    {/* Professional Experience */}\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold mb-4 text-gray-700 flex items-center\">\r\n                                            <svg className=\"w-6 h-6 mr-2 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                                            </svg>\r\n                                            Professional Experience\r\n                                        </h2>\r\n                                        <div className=\"space-y-4\">\r\n                                            {cvData.experiences.map((exp, index) => (\r\n                                                <div key={index} className=\"bg-gray-50 p-4 rounded-lg\">\r\n                                                    <h3 className=\"text-xl font-semibold text-gray-800\">{exp}</h3>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-6\">\r\n                                    {/* Skills */}\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold mb-4 text-gray-700 flex items-center\">\r\n                                            <svg className=\"w-6 h-6 mr-2 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n                                            </svg>\r\n                                            Skills\r\n                                        </h2>\r\n                                        <div className=\"space-y-2\">\r\n                                            {cvData.skills.map((skill, index) => (\r\n                                                <div key={index} className=\"relative pt-1\">\r\n                                                    <div className=\"flex mb-2 items-center justify-between\">\r\n                                                        <div>\r\n                                                            <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-green-600 bg-green-200\">\r\n                                                                {skill}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-green-200\">\r\n                                                        <div style={{ width: `${Math.random() * 40 + 60}%` }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-green-500\"></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n\r\n                                    {/* Education */}\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold mb-4 text-gray-700 flex items-center\">\r\n                                            <svg className=\"w-6 h-6 mr-2 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\r\n                                            </svg>\r\n                                            Education\r\n                                        </h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-600\">\r\n                                            {cvData.education.map((edu, index) => (\r\n                                                <li key={index}>{edu}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n\r\n                                    {/* Languages */}\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold mb-4 text-gray-700 flex items-center\">\r\n                                            <svg className=\"w-6 h-6 mr-2 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\" />\r\n                                            </svg>\r\n                                            Languages\r\n                                        </h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-600\">\r\n                                            {cvData.languages.map((lang, index) => (\r\n                                                <li key={index}>{lang}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                );\r\n\r\n            case 'Greedle':\r\n                return (\r\n                    <div className=\"bg-gradient-to-r from-indigo-500 to-purple-600 p-1 rounded-3xl shadow-2xl max-w-4xl mx-auto\" ref={cvRef}>\r\n                        <div className=\"bg-white rounded-3xl p-8 shadow-lg\">\r\n                            <header className=\"flex justify-between items-center mb-8\">\r\n                                <div>\r\n                                    <h1 className=\"text-4xl font-extrabold mb-2 text-transparent bg-clip-text bg-gradient-to-r from-indigo-600 to-purple-500\">\r\n                                        {cvData.name}\r\n                                    </h1>\r\n                                    <p className=\"text-xl text-gray-700\">{cvData.title}</p>\r\n                                    <p className=\"text-sm text-gray-600\">{cvData.email} | {cvData.phone}</p>\r\n                                    <p className=\"text-sm text-gray-600\">Born on: {cvData.dateOfBirth} | Nationality: {cvData.nationality}</p>\r\n                                </div>\r\n                                {cvData.photo && (\r\n                                    <div className=\"relative\">\r\n                                        <div className=\"w-32 h-32 rounded-full bg-gradient-to-r from-indigo-400 to-purple-500 flex items-center justify-center shadow-lg\">\r\n                                            <img src={cvData.photo} alt=\"Profile\" className=\"w-28 h-28 rounded-full object-cover border-4 border-white shadow-md\" />\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </header>\r\n\r\n                            <div className=\"grid grid-cols-3 gap-8\">\r\n                                <div className=\"col-span-2 space-y-6\">\r\n                                    {/* About Me */}\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold mb-4 text-gray-800 flex items-center\">\r\n                                            <svg className=\"w-6 h-6 mr-2 text-indigo-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                                            </svg>\r\n                                            About Me\r\n                                        </h2>\r\n                                        <p className=\"text-gray-700 leading-relaxed\">{cvData.about}</p>\r\n                                    </section>\r\n\r\n                                    {/* Professional Experience */}\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold mb-4 text-gray-800 flex items-center\">\r\n                                            <svg className=\"w-6 h-6 mr-2 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                                            </svg>\r\n                                            Professional Experience\r\n                                        </h2>\r\n                                        <div className=\"space-y-4\">\r\n                                            {cvData.experiences.map((exp, index) => (\r\n                                                <div key={index} className=\"bg-gray-50 p-4 rounded-lg shadow-md\">\r\n                                                    <h3 className=\"text-xl font-semibold text-gray-800\">{exp}</h3>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-6\">\r\n                                    {/* Skills */}\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold mb-4 text-gray-800 flex items-center\">\r\n                                            <svg className=\"w-6 h-6 mr-2 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n                                            </svg>\r\n                                            Skills\r\n                                        </h2>\r\n                                        <div className=\"space-y-2\">\r\n                                            {cvData.skills.map((skill, index) => (\r\n                                                <div key={index} className=\"relative pt-1\">\r\n                                                    <div className=\"flex mb-2 items-center justify-between\">\r\n                                                        <div>\r\n                                                            <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-indigo-600 bg-indigo-200\">\r\n                                                                {skill}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-indigo-200\">\r\n                                                        <div style={{ width: `${Math.random() * 40 + 60}%` }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-500\"></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n\r\n                                    {/* Education */}\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold mb-4 text-gray-800 flex items-center\">\r\n                                            <svg className=\"w-6 h-6 mr-2 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\r\n                                            </svg>\r\n                                            Education\r\n                                        </h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-700\">\r\n                                            {cvData.education.map((edu, index) => (\r\n                                                <li key={index}>{edu}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n\r\n                                    {/* Languages */}\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold mb-4 text-gray-800 flex items-center\">\r\n                                            <svg className=\"w-6 h-6 mr-2 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\" />\r\n                                            </svg>\r\n                                            Languages\r\n                                        </h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-700\">\r\n                                            {cvData.languages.map((lang, index) => (\r\n                                                <li key={index}>{lang}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                );\r\n\r\n            case 'Theme1':\r\n                return (\r\n                    <div className=\"bg-gradient-to-r from-purple-500 to-blue-600 p-1 rounded-3xl shadow-lg max-w-4xl mx-auto\">\r\n                        <div className=\"bg-white rounded-3xl p-8 shadow-xl\">\r\n                            <header className=\"flex justify-between items-center mb-8\">\r\n                                <div>\r\n                                    <h1 className=\"text-5xl font-extrabold mb-2 text-transparent bg-clip-text bg-gradient-to-r from-purple-600 to-blue-500\">\r\n                                        {cvData.name}\r\n                                    </h1>\r\n                                    <p className=\"text-xl font-medium text-gray-700\">{cvData.title}</p>\r\n                                    <p className=\"text-sm text-gray-500\">{cvData.email} | {cvData.phone}</p>\r\n                                    <p className=\"text-sm text-gray-500\">Born on: {cvData.dateOfBirth} | Nationality: {cvData.nationality}</p>\r\n                                </div>\r\n                                {cvData.photo && (\r\n                                    <div className=\"relative\">\r\n                                        <div className=\"w-36 h-36 rounded-full bg-gradient-to-r from-purple-400 to-blue-500 flex items-center justify-center\">\r\n                                            <img src={cvData.photo} alt=\"Profile\" className=\"w-32 h-32 rounded-full object-cover border-4 border-white shadow-lg\" />\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </header>\r\n\r\n                            <div className=\"grid grid-cols-3 gap-10\">\r\n                                <div className=\"col-span-2 space-y-6\">\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold mb-4 text-gray-800 flex items-center\">\r\n                                            <svg className=\"w-7 h-7 mr-2 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                                            </svg>\r\n                                            About Me\r\n                                        </h2>\r\n                                        <p className=\"text-gray-700 leading-relaxed\">{cvData.about}</p>\r\n                                    </section>\r\n\r\n                                    {/* Professional Experience */}\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold mb-4 text-gray-800 flex items-center\">\r\n                                            <svg className=\"w-7 h-7 mr-2 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                                            </svg>\r\n                                            Professional Experience\r\n                                        </h2>\r\n                                        <div className=\"space-y-4\">\r\n                                            {cvData.experiences.map((exp, index) => (\r\n                                                <div key={index} className=\"bg-gray-50 p-4 rounded-lg shadow\">\r\n                                                    <h3 className=\"text-xl font-semibold text-gray-800\">{exp}</h3>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-6\">\r\n                                    {/* Skills */}\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold mb-4 text-gray-800 flex items-center\">\r\n                                            <svg className=\"w-7 h-7 mr-2 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n                                            </svg>\r\n                                            Skills\r\n                                        </h2>\r\n                                        <div className=\"space-y-2\">\r\n                                            {cvData.skills.map((skill, index) => (\r\n                                                <div key={index} className=\"relative pt-1\">\r\n                                                    <div className=\"flex mb-2 items-center justify-between\">\r\n                                                        <div>\r\n                                                            <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-yellow-600 bg-yellow-200\">\r\n                                                                {skill}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-yellow-200\">\r\n                                                        <div style={{ width: `${Math.random() * 40 + 60}%` }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-yellow-500\"></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n\r\n                                    {/* Education */}\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold mb-4 text-gray-800 flex items-center\">\r\n                                            <svg className=\"w-7 h-7 mr-2 text-purple-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\r\n                                            </svg>\r\n                                            Education\r\n                                        </h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-600\">\r\n                                            {cvData.education.map((edu, index) => (\r\n                                                <li key={index} className=\"hover:text-blue-600\">{edu}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n\r\n                                    {/* Languages */}\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold mb-4 text-gray-800 flex items-center\">\r\n                                            <svg className=\"w-7 h-7 mr-2 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\" />\r\n                                            </svg>\r\n                                            Languages\r\n                                        </h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-600\">\r\n                                            {cvData.languages.map((lang, index) => (\r\n                                                <li key={index} className=\"hover:text-blue-600\">{lang}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                );\r\n\r\n            case 'Theme2':\r\n                return (\r\n                    <div className=\"flex h-screen bg-gradient-to-bl from-gray-100 to-blue-300\">\r\n                        <div className=\"w-full max-w-4xl mx-auto bg-white rounded-3xl shadow-lg p-8 relative z-10\">\r\n                            <header className=\"flex justify-between items-center mb-8\">\r\n                                <div>\r\n                                    <h1 className=\"text-6xl font-extrabold text-blue-600\">{cvData.name}</h1>\r\n                                    <p className=\"text-xl font-medium text-gray-700\">{cvData.title}</p>\r\n                                    <p className=\"text-sm text-gray-500\">{cvData.email} | {cvData.phone}</p>\r\n                                    <p className=\"text-sm text-gray-500\">Born on: {cvData.dateOfBirth} | Nationality: {cvData.nationality}</p>\r\n                                </div>\r\n                                {cvData.photo && (\r\n                                    <div className=\"relative\">\r\n                                        <img src={cvData.photo} alt=\"Profile\" className=\"w-36 h-36 rounded-full border-4 border-white shadow-lg\" />\r\n                                    </div>\r\n                                )}\r\n                            </header>\r\n\r\n                            <div className=\"grid grid-cols-3 gap-10\">\r\n                                <div className=\"col-span-2 space-y-6\">\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold text-blue-600 border-b-2 border-blue-400 pb-2\">About Me</h2>\r\n                                        <p className=\"text-gray-700 leading-relaxed\">{cvData.about}</p>\r\n                                    </section>\r\n\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold text-blue-600 border-b-2 border-blue-400 pb-2\">Professional Experience</h2>\r\n                                        <div className=\"space-y-4\">\r\n                                            {cvData.experiences.map((exp, index) => (\r\n                                                <div key={index} className=\"bg-gray-50 p-4 rounded-lg shadow\">\r\n                                                    <h3 className=\"text-xl font-semibold text-gray-800\">{exp}</h3>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-6\">\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold text-blue-600 border-b-2 border-blue-400 pb-2\">Skills</h2>\r\n                                        <div className=\"space-y-2\">\r\n                                            {cvData.skills.map((skill, index) => (\r\n                                                <div key={index} className=\"relative pt-1\">\r\n                                                    <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-white bg-blue-600\">\r\n                                                        {skill}\r\n                                                    </span>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold text-blue-600 border-b-2 border-blue-400 pb-2\">Education</h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-600\">\r\n                                            {cvData.education.map((edu, index) => (\r\n                                                <li key={index} className=\"hover:text-blue-600\">{edu}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold text-blue-600 border-b-2 border-blue-400 pb-2\">Languages</h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-600\">\r\n                                            {cvData.languages.map((lang, index) => (\r\n                                                <li key={index} className=\"hover:text-blue-600\">{lang}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                );\r\n\r\n\r\n            case 'Theme3':\r\n                return (\r\n                    <div className=\"flex items-center justify-center h-screen bg-gray-100\">\r\n                        <div className=\"bg-white rounded-lg shadow-lg p-6 max-w-4xl w-full relative overflow-hidden\">\r\n                            <div className=\"absolute inset-0 bg-gradient-to-r from-purple-600 to-indigo-600 opacity-30 rounded-lg\"></div>\r\n                            <header className=\"relative z-10 flex flex-col md:flex-row md:justify-between items-start mb-6\">\r\n                                <div className=\"flex flex-col\">\r\n                                    <h1 className=\"text-5xl font-bold text-gray-800\">{cvData.name}</h1>\r\n                                    <p className=\"text-xl text-gray-600\">{cvData.title}</p>\r\n                                    <div className=\"text-sm text-gray-500 mt-1\">\r\n                                        {cvData.email} | {cvData.phone}\r\n                                    </div>\r\n                                    <div className=\"text-sm text-gray-500\">\r\n                                        Born on: {cvData.dateOfBirth} | Nationality: {cvData.nationality}\r\n                                    </div>\r\n                                </div>\r\n                                {cvData.photo && (\r\n                                    <div className=\"relative mt-6 md:mt-0 md:ml-6\">\r\n                                        <img src={cvData.photo} alt=\"Profile\" className=\"w-32 h-32 rounded-full border-4 border-white shadow-lg\" />\r\n                                    </div>\r\n                                )}\r\n                            </header>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                                <div className=\"col-span-2\">\r\n                                    <section className=\"mb-6\">\r\n                                        <h2 className=\"text-2xl font-bold text-purple-600 mb-3\">About Me</h2>\r\n                                        <p className=\"text-gray-700 leading-relaxed\">{cvData.about}</p>\r\n                                    </section>\r\n\r\n                                    <section className=\"mb-6\">\r\n                                        <h2 className=\"text-2xl font-bold text-purple-600 mb-3\">Professional Experience</h2>\r\n                                        <div className=\"space-y-4\">\r\n                                            {cvData.experiences.map((exp, index) => (\r\n                                                <div key={index} className=\"bg-gray-50 p-4 rounded-lg shadow-md\">\r\n                                                    <h3 className=\"text-xl font-semibold text-gray-800\">{exp}</h3>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-6\">\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold text-purple-600 mb-3\">Skills</h2>\r\n                                        <div className=\"space-y-2\">\r\n                                            {cvData.skills.map((skill, index) => (\r\n                                                <span key={index} className=\"inline-block px-3 py-1 text-sm font-semibold text-white bg-purple-600 rounded-full\">\r\n                                                    {skill}\r\n                                                </span>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold text-purple-600 mb-3\">Education</h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-700\">\r\n                                            {cvData.education.map((edu, index) => (\r\n                                                <li key={index}>{edu}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n\r\n                                    <section>\r\n                                        <h2 className=\"text-2xl font-bold text-purple-600 mb-3\">Languages</h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-700\">\r\n                                            {cvData.languages.map((lang, index) => (\r\n                                                <li key={index}>{lang}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                );\r\n\r\n            case 'Theme4':\r\n                return (\r\n                    <div className=\"flex items-center justify-center h-screen bg-gray-200\">\r\n                        <div className=\"bg-white rounded-2xl shadow-lg p-8 max-w-4xl w-full relative overflow-hidden\">\r\n                            <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500 to-purple-600 opacity-20 rounded-2xl\"></div>\r\n                            <header className=\"relative z-10 flex flex-col md:flex-row md:justify-between items-start mb-8\">\r\n                                <div className=\"flex flex-col\">\r\n                                    <h1 className=\"text-6xl font-bold text-gray-800\">{cvData.name}</h1>\r\n                                    <p className=\"text-2xl text-gray-600 mt-2\">{cvData.title}</p>\r\n                                    <div className=\"text-sm text-gray-500 mt-1\">\r\n                                        {cvData.email} | {cvData.phone}\r\n                                    </div>\r\n                                    <div className=\"text-sm text-gray-500\">\r\n                                        Born on: {cvData.dateOfBirth} | Nationality: {cvData.nationality}\r\n                                    </div>\r\n                                </div>\r\n                                {cvData.photo && (\r\n                                    <div className=\"relative mt-6 md:mt-0 md:ml-8\">\r\n                                        <img src={cvData.photo} alt=\"Profile\" className=\"w-40 h-40 rounded-full border-4 border-white shadow-lg\" />\r\n                                    </div>\r\n                                )}\r\n                            </header>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\r\n                                <div className=\"col-span-2\">\r\n                                    <section className=\"mb-6\">\r\n                                        <h2 className=\"text-3xl font-bold text-blue-600 mb-4\">About Me</h2>\r\n                                        <p className=\"text-gray-700 leading-relaxed\">{cvData.about}</p>\r\n                                    </section>\r\n\r\n                                    <section className=\"mb-6\">\r\n                                        <h2 className=\"text-3xl font-bold text-blue-600 mb-4\">Professional Experience</h2>\r\n                                        <div className=\"space-y-4\">\r\n                                            {cvData.experiences.map((exp, index) => (\r\n                                                <div key={index} className=\"bg-gray-50 p-4 rounded-lg shadow-md transition-transform transform hover:scale-105\">\r\n                                                    <h3 className=\"text-xl font-semibold text-gray-800\">{exp}</h3>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-6\">\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold text-blue-600 mb-4\">Skills</h2>\r\n                                        <div className=\"flex flex-wrap gap-2\">\r\n                                            {cvData.skills.map((skill, index) => (\r\n                                                <span key={index} className=\"inline-block px-3 py-1 text-sm font-semibold text-white bg-blue-600 rounded-full shadow-md\">\r\n                                                    {skill}\r\n                                                </span>\r\n                                            ))}\r\n                                        </div>\r\n                                    </section>\r\n\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold text-blue-600 mb-4\">Education</h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-700\">\r\n                                            {cvData.education.map((edu, index) => (\r\n                                                <li key={index}>{edu}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n\r\n                                    <section>\r\n                                        <h2 className=\"text-3xl font-bold text-blue-600 mb-4\">Languages</h2>\r\n                                        <ul className=\"list-disc list-inside text-gray-700\">\r\n                                            {cvData.languages.map((lang, index) => (\r\n                                                <li key={index}>{lang}</li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </section>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                );\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    //start test \r\n\r\n    const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\r\n    const contentRef = useRef(null);\r\n\r\n    // const downloadPDF2 = async () => {\r\n    //     if (contentRef.current) {\r\n    //         const htmlContent = contentRef.current.innerHTML;\r\n    //         try {\r\n    //             const response = await axios.post('/api/html-to-pdf', {\r\n    //                 html: htmlContent,\r\n    //                 width: dimensions.width,\r\n    //                 height: dimensions.height,\r\n    //             }, {\r\n    //                 responseType: 'blob', // Ensure the response is a Blob\r\n    //             });\r\n\r\n    //             const url = window.URL.createObjectURL(new Blob([response.data]));\r\n    //             const link = document.createElement('a');\r\n    //             link.href = url;\r\n    //             link.setAttribute('download', 'document.pdf');\r\n    //             document.body.appendChild(link);\r\n    //             link.click();\r\n    //             link.remove();\r\n    //         } catch (error) {\r\n    //             console.error('Error generating PDF:', error);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    const downloadPDF2 = async () => {\r\n        if (contentRef.current) {\r\n            const htmlContent = contentRef.current.innerHTML;\r\n\r\n            const style = `\r\n                <style>\r\n                    @import url('https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css');\r\n                </style>\r\n            `;\r\n\r\n            const completeContent = style + htmlContent;\r\n\r\n            try {\r\n                const response = await axios.post('/api/html-to-pdf', {\r\n                    html: completeContent,\r\n                    width: dimensions.width,\r\n                    height: dimensions.height,\r\n                }, {\r\n                    responseType: 'blob', // Ensure the response is a Blob\r\n                });\r\n\r\n                const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.setAttribute('download', cvData.name + '_CV.pdf');\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                link.remove();\r\n            } catch (error) {\r\n                console.error('Error generating PDF:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [response, setResponse] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const res = await axios.post('/api/sendPost', {\r\n                text_username: username,\r\n            });\r\n\r\n            setResponse(res.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n\r\n    //end test\r\n\r\n    const [showThemee, setShowThemes] = useState(false);\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Helmet>\r\n                <title>CV Designer - Create Your Professional Resume (Demo)</title>\r\n                <meta name=\"description\" content=\"Design your professional CV with our easy-to-use CV designer. Choose from multiple templates and customize your resume effortlessly.\" />\r\n            </Helmet>\r\n\r\n            <main className=\"max-w-7xl mx-auto p-4\">\r\n                <h1 className=\"text-3xl font-bold text-center mb-6\">CV Designer (Demo)</h1>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-6 gap-6\">\r\n\r\n                    <div className={`${showInfo ? 'md:col-span-2' : 'md:hidden'}`}>\r\n\r\n\r\n\r\n\r\n                        <div className='flex items-center relative'>\r\n                            <h2 className=\"text-xl font-semibold mb-4 mr-4\">\r\n                                Enter Your Information\r\n                            </h2>\r\n                            <span onClick={() => setShowInfo(!showInfo)} className='absolute right-0 cursor-pointer'>\r\n                                <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M9 13L9 10H16V6L9 6L9 3L8 3L3 8L8 13H9Z\" fill=\"#000000\"></path>\r\n                                    <path d=\"M2 14L2 2L0 2L5.24537e-07 14H2Z\" fill=\"#000000\"></path>\r\n                                </svg>\r\n                            </span>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"my-4\">\r\n                            <h3 className=\"text-lg font-semibold mb-2\">Choose Design</h3>\r\n\r\n                            <div className=\"relative\">\r\n                                <button onClick={() => setShowThemes(!showThemee)} className=\"w-full p-2 border rounded flex items-center justify-between bg-white\">\r\n                                    <img\r\n                                        src={themePreviews[selectedDesign]}\r\n                                        alt={selectedDesign}\r\n                                        className=\"w-10 h-10 mr-2 rounded-md\"\r\n                                    />\r\n                                    {themes.find(theme => theme.value === selectedDesign).label}\r\n                                    <span className=\"ml-2\">&#x25BC;</span>\r\n                                </button>\r\n                                {showThemee && (\r\n                                    <ul className=\"absolute z-10 w-full mt-2 border rounded bg-white shadow-md\">\r\n                                        {themes.map((theme) => (\r\n                                            <li\r\n                                                key={theme.value}\r\n                                                onClick={() => { setSelectedDesign(theme.value); setShowThemes(false); }}\r\n                                                className=\"p-2 hover:bg-gray-100 cursor-pointer flex items-center\"\r\n                                            >\r\n                                                <img\r\n                                                    src={themePreviews[theme.value]}\r\n                                                    alt={theme.label}\r\n                                                    className=\"w-50 h-50 mr-2 rounded-md\"\r\n                                                />\r\n                                                {theme.label}\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <form>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={cvData.name}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Full Name\"\r\n                                className=\"w-full p-2 mb-4 border rounded\"\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                value={cvData.title}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Professional Title\"\r\n                                className=\"w-full p-2 mb-4 border rounded\"\r\n                            />\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={cvData.email}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Email\"\r\n                                className=\"w-full p-2 mb-4 border rounded\"\r\n                            />\r\n                            <input\r\n                                type=\"tel\"\r\n                                name=\"phone\"\r\n                                value={cvData.phone}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Phone\"\r\n                                className=\"w-full p-2 mb-4 border rounded\"\r\n                            />\r\n                            <input\r\n                                type=\"date\"\r\n                                name=\"dateOfBirth\"\r\n                                value={cvData.dateOfBirth}\r\n                                onChange={handleInputChange}\r\n                                className=\"w-full p-2 mb-4 border rounded\"\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"nationality\"\r\n                                value={cvData.nationality}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Nationality\"\r\n                                className=\"w-full p-2 mb-4 border rounded\"\r\n                            />\r\n                            <textarea\r\n                                name=\"about\"\r\n                                value={cvData.about}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"About Me\"\r\n                                className=\"w-full p-2 mb-4 border rounded\"\r\n                                rows=\"4\"\r\n                            ></textarea>\r\n\r\n                            <h3 className=\"font-semibold mt-4 mb-2\">Languages</h3>\r\n                            {cvData.languages.map((lang, index) => (\r\n                                <div key={index} className=\"flex mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={lang}\r\n                                        onChange={(e) => handleListChange('languages', index, e.target.value)}\r\n                                        className=\"flex-grow p-2 border rounded mr-2\"\r\n                                    />\r\n                                    <button type=\"button\" className=\"bg-red-500 px-2 rounded\" onClick={() => removeListItem('languages', index)} >Remove</button>\r\n                                </div>\r\n                            ))}\r\n                            <button type=\"button\" onClick={() => addListItem('languages')} className=\"bg-blue-500    px-2 py-1 rounded mb-4\">+ Add Language</button>\r\n\r\n                            <h3 className=\"font-semibold mt-4 mb-2\">Qualities</h3>\r\n                            {cvData.qualities.map((quality, index) => (\r\n                                <div key={index} className=\"flex mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={quality}\r\n                                        onChange={(e) => handleListChange('qualities', index, e.target.value)}\r\n                                        className=\"flex-grow p-2 border rounded mr-2\"\r\n                                    />\r\n                                    <button type=\"button\" onClick={() => removeListItem('qualities', index)} className=\"bg-red-500    px-2 rounded\">Remove</button>\r\n                                </div>\r\n                            ))}\r\n                            <button type=\"button\" onClick={() => addListItem('qualities')} className=\"bg-blue-500    px-2 py-1 rounded mb-4\">+ Add Quality</button>\r\n\r\n                            <h3 className=\"font-semibold mt-4 mb-2\">Professional Experiences</h3>\r\n                            {cvData.experiences.map((exp, index) => (\r\n                                <div key={index} className=\"flex mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={exp}\r\n                                        onChange={(e) => handleListChange('experiences', index, e.target.value)}\r\n                                        className=\"flex-grow p-2 border rounded mr-2\"\r\n                                    />\r\n                                    <button type=\"button\" onClick={() => removeListItem('experiences', index)} className=\"bg-red-500    px-2 rounded\">Remove</button>\r\n                                </div>\r\n                            ))}\r\n                            <button type=\"button\" onClick={() => addListItem('experiences')} className=\"bg-blue-500    px-2 py-1 rounded mb-4\">+ Add Experience</button>\r\n\r\n                            <h3 className=\"font-semibold mt-4 mb-2\">Education</h3>\r\n                            {cvData.education.map((edu, index) => (\r\n                                <div key={index} className=\"flex mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={edu}\r\n                                        onChange={(e) => handleListChange('education', index, e.target.value)}\r\n                                        className=\"flex-grow p-2 border rounded mr-2\"\r\n                                    />\r\n                                    <button type=\"button\" onClick={() => removeListItem('education', index)} className=\"bg-red-500    px-2 rounded\">Remove</button>\r\n                                </div>\r\n                            ))}\r\n                            <button type=\"button\" onClick={() => addListItem('education')} className=\"bg-blue-500    px-2 py-1 rounded mb-4\">+ Add Education</button>\r\n\r\n                            <h3 className=\"font-semibold mt-4 mb-2\">Skills</h3>\r\n                            {cvData.skills.map((skill, index) => (\r\n                                <div key={index} className=\"flex mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={skill}\r\n                                        onChange={(e) => handleListChange('skills', index, e.target.value)}\r\n                                        className=\"flex-grow p-2 border rounded mr-2\"\r\n                                    />\r\n                                    <button type=\"button\" onClick={() => removeListItem('skills', index)} className=\"bg-red-500    px-2 rounded\">Remove</button>\r\n                                </div>\r\n                            ))}\r\n                            <button type=\"button\" onClick={() => addListItem('skills')} className=\"bg-blue-500    px-2 py-1 rounded mb-4\">+ Add Skill</button>\r\n\r\n                            <h3 className=\"font-semibold mt-4 mb-2\">Profile Photo</h3>\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                onChange={handlePhotoUpload}\r\n                                className=\"mb-4\"\r\n                            />\r\n                        </form>\r\n\r\n\r\n\r\n\r\n                        <button onClick={downloadPDF2} className=\"mt-4 bg-green-500    px-4 py-2 rounded\">Download PDF</button>\r\n                    </div>\r\n\r\n                    <div className={`${showInfo ? 'md:col-span-4' : 'md:col-span-6'}`}>\r\n                        <h2 className=\"text-xl font-semibold mb-4 flex\">\r\n                            {!showInfo && (<span onClick={() => setShowInfo(!showInfo)}>\r\n\r\n                                <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <path d=\"M10 3V6H4L4 10H10L10 13L11 13L16 8L11 3L10 3Z\" fill=\"#000000\"></path> <path d=\"M0 2L1.38281e-06 14H2L2 2L0 2Z\" fill=\"#000000\"></path> </g></svg>\r\n                            </span>)}\r\n                            &nbsp; &nbsp; &nbsp;\r\n                            Preview</h2>\r\n\r\n\r\n\r\n\r\n                        <div className=\"border rounded p-4 overflow-auto max-h-screen\">\r\n                            {!showInfo && (\r\n                                <button onClick={downloadPDF2} className=\"mt-4 bg-green-500    px-4 py-2 rounded float-right\">Download PDF</button>\r\n                            )}\r\n                            <div ref={contentRef} >\r\n                                {renderDesign()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n\r\n            {/* <>\r\n\r\n                <div>\r\n                    <h1>Message Board</h1>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        placeholder=\"Enter your message\"\r\n                    />\r\n                    <button onClick={postMessage}>Post Message</button>\r\n                    <h2>Messages:</h2>\r\n                    <ul>\r\n                        {messages}\r\n                        {messages.map((msg, index) => (\r\n                            <li key={index}>{msg}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </> */}\r\n\r\n\r\n            {/* <div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        placeholder=\"Enter Instagram username\"\r\n                    />\r\n                    <button type=\"submit\">Save Story</button>\r\n                </form>\r\n\r\n                {response && <pre>{JSON.stringify(response, null, 2)}</pre>}\r\n            </div> */}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CVDesigner;","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}"],"names":["themePreviews","modern","classic","minimalist","elegant","Purplix","Greedle","themes","value","label","_useState","useState","name","title","email","phone","dateOfBirth","nationality","about","languages","qualities","experiences","education","skills","photo","mainBigLogo","_useState2","_slicedToArray","cvData","setCvData","_useState3","_useState4","selectedDesign","setSelectedDesign","_useState5","_useState6","showInfo","setShowInfo","cvRef","useRef","handleInputChange","e","_e$target","target","prevData","_objectSpread","_defineProperty","handleListChange","section","index","newSection","_toConsumableArray","addListItem","concat","removeListItem","filter","_","i","_useState7","width","height","_useState8","dimensions","contentRef","downloadPDF2","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","htmlContent","completeContent","_response","url","link","wrap","_context","prev","next","current","innerHTML","axios","post","html","responseType","response","sent","window","URL","createObjectURL","Blob","data","document","createElement","href","setAttribute","body","appendChild","click","remove","t0","console","error","stop","apply","arguments","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","showThemee","setShowThemes","_jsxs","_Fragment","children","Helmet","_jsx","content","className","onClick","viewBox","fill","xmlns","d","src","alt","find","theme","map","type","onChange","placeholder","rows","lang","quality","exp","edu","skill","accept","file","files","reader","FileReader","onloadend","result","readAsDataURL","id","ref","stroke","strokeLinecap","strokeLinejoin","strokeWidth","style","Math","random","renderDesign","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","r","t","keys","getOwnPropertySymbols","o","getOwnPropertyDescriptor","push","_objectSpread2","length","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}