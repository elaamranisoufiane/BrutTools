{"version":3,"file":"static/js/9365.7ba2c444.chunk.js","mappings":"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","sources":["pages/dashboradGuest/Tempmail/IMAPTester.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Helmet } from 'react-helmet';\r\nconst IMAPTester = () => {\r\n    const [imapConfig, setImapConfig] = useState({\r\n        host: '',\r\n        port: '',\r\n        user: '',\r\n        password: '',\r\n    });\r\n    const [emails, setEmails] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleInputChange = (e) => {\r\n        setImapConfig({ ...imapConfig, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleFetchEmails = async () => {\r\n        if (!imapConfig.host || !imapConfig.port || !imapConfig.user || !imapConfig.password) {\r\n            setError('All IMAP fields must be filled.');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            const response = await axios.post('/api/receive-emails-IMAP-Tester', imapConfig);\r\n            setEmails(response.data.emails);\r\n        } catch (err) {\r\n            console.error('Error fetching emails:', err);\r\n            setError('Failed to fetch emails. Please check your IMAP settings.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Free IMAP Tester</title>\r\n                <meta name=\"description\" content=\"Test IMAP configurations by receive temporary emails with attachments.\" />\r\n            </Helmet>\r\n\r\n            <main className=\"max-w-3/4 h-full flex flex-col items-center min-h-screen\">\r\n                <div className=\"container bg-white md:p-10 rounded-lg mx-auto grid grid-cols-1 md:grid-cols-12 gap-1\">\r\n\r\n                    <div className=\"container mx-auto p-8 md:col-span-3\">\r\n                        <h1 className=\"text-4xl font-bold text-center mb-4\">IMAP Email Fetcher</h1>\r\n\r\n                        <div className=\"bg-white p-6 rounded-lg shadow-lg\">\r\n                            {/* IMAP Config Fields */}\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"IMAP Host\"\r\n                                name=\"host\"\r\n                                value={imapConfig.host}\r\n                                onChange={handleInputChange}\r\n                                className=\"w-full mb-4 p-2 border border-gray-300 rounded-lg\"\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"IMAP Port\"\r\n                                name=\"port\"\r\n                                value={imapConfig.port}\r\n                                onChange={handleInputChange}\r\n                                className=\"w-full mb-4 p-2 border border-gray-300 rounded-lg\"\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"IMAP User\"\r\n                                name=\"user\"\r\n                                value={imapConfig.user}\r\n                                onChange={handleInputChange}\r\n                                className=\"w-full mb-4 p-2 border border-gray-300 rounded-lg\"\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"IMAP Password\"\r\n                                name=\"password\"\r\n                                value={imapConfig.password}\r\n                                onChange={handleInputChange}\r\n                                className=\"w-full mb-4 p-2 border border-gray-300 rounded-lg\"\r\n                            />\r\n\r\n                            {/* Fetch Emails Button */}\r\n                            <button\r\n                                onClick={handleFetchEmails}\r\n                                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n                            >\r\n                                {loading ? 'Fetching...' : 'Fetch Emails'}\r\n                            </button>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className='md:col-span-9'>\r\n                        {/* Error Message */}\r\n                        {error && <p className=\"text-red-500 mt-4\">{error}</p>}\r\n\r\n                        {/* Display Fetched Emails */}\r\n                        <div className=\"mt-6\">\r\n                            <h2 className=\"text-2xl font-semibold mb-4\">Received Emails:</h2>\r\n                            {emails.length > 0 && (\r\n                                <h2 className=\"text-xl font-semibold text-green-500 mb-4\">IMAP successfully connected</h2>\r\n                            )}\r\n\r\n                            {emails.length > 0 ? (\r\n                                <ul>\r\n                                    {emails.map((email, index) => (\r\n                                        <li key={index} className=\"border p-4 rounded-lg mb-4\">\r\n                                            <h3 className=\"text-lg font-bold\">From: {email.from}</h3>\r\n                                            <p><strong>Subject:</strong> {email.subject}</p>\r\n                                            <p><strong>Body:</strong> {email.body}</p>\r\n                                            <p><strong>Date:</strong> {email.date}</p>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            ) : (\r\n                                <p>No emails received yet.</p>\r\n                            )}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default IMAPTester;\r\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}"],"names":["_useState","useState","host","port","user","password","_useState2","_slicedToArray","imapConfig","setImapConfig","_useState3","_useState4","emails","setEmails","_useState5","_useState6","error","setError","_useState7","_useState8","loading","setLoading","handleInputChange","e","_objectSpread","_defineProperty","target","name","value","handleFetchEmails","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","abrupt","axios","post","sent","data","t0","console","finish","stop","apply","arguments","_jsxs","_Fragment","children","Helmet","_jsx","content","className","type","placeholder","onChange","onClick","length","map","email","index","from","subject","body","date","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}