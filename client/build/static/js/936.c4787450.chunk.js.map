{"version":3,"file":"static/js/936.c4787450.chunk.js","mappings":"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","sources":["pages/dashboradGuest/Audio/SpeechToText.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst SpeechToText = () => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [error, setError] = useState('');\r\n    const mediaRecorder = useRef(null);\r\n\r\n    const startRecording = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            mediaRecorder.current = new MediaRecorder(stream);\r\n\r\n            mediaRecorder.current.ondataavailable = async (event) => {\r\n                if (event.data.size > 0) {\r\n                    const formData = new FormData();\r\n                    formData.append('audio', event.data, 'recording.wav');\r\n\r\n                    try {\r\n                        const response = await fetch('/api/speech-to-text', {\r\n                            method: 'POST',\r\n                            body: formData,\r\n                        });\r\n\r\n                        if (!response.ok) throw new Error('Failed to convert speech to text');\r\n\r\n                        const result = await response.json();\r\n                        setText(result.text);\r\n                    } catch (err) {\r\n                        setError('Error sending audio to server: ' + err.message);\r\n                    }\r\n                }\r\n            };\r\n\r\n            mediaRecorder.current.start();\r\n            setIsRecording(true);\r\n        } catch (err) {\r\n            setError('Error starting recording: ' + err.message);\r\n        }\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        if (mediaRecorder.current && isRecording) {\r\n            mediaRecorder.current.stop();\r\n            setIsRecording(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Free Speech to Text Converter - Convert Your Speech to Text Easily</title>\r\n                <meta name=\"description\" content=\"Convert your speech into text effortlessly with our speech-to-text converter. Experience accurate transcription instantly.\" />\r\n            </Helmet>\r\n\r\n            <main className=\"max-w-3/4 h-full flex flex-col items-center min-h-screen p-2\">\r\n                <div className=\"container bg-white p-2 md:p-10 rounded-lg mx-auto flex-col\">\r\n                    <div className=\"max-w-2xl mx-auto mt-10 p-8 bg-gradient-to-br from-white-900 to-white-800 rounded-xl shadow-2xl\">\r\n                        <h1 className=\"text-4xl font-bold text-center mb-4 text-gray-800\">Speech to Text</h1>\r\n                        <p className=\"text-center text-gray-600 mb-8\">\r\n                            Convert your speech into text with our easy-to-use tool. Start and stop recording to transcribe your speech instantly.\r\n                        </p>\r\n                        <div className=\"text-center flex flex-col space-y-4\">\r\n                            <button\r\n                                onClick={isRecording ? stopRecording : startRecording}\r\n                                className={`w-full bg-main-color hover:bg-blue-300 text-white font-bold py-2 px-4 rounded-lg ${isRecording ? 'bg-red-500' : ''}`}\r\n                            >\r\n                                {isRecording ? 'Stop Recording' : 'Start Recording'}\r\n                            </button>\r\n                            {text && (\r\n                                <div className=\"mt-4 p-4 bg-gray-100 rounded-md\">\r\n                                    <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">Transcribed Text:</h2>\r\n                                    <p className=\"text-gray-800\">{text}</p>\r\n                                </div>\r\n                            )}\r\n                            {error && <p className=\"text-red-500 mt-2 text-center\">{error}</p>}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-10 max-w-2xl mx-auto text-center\">\r\n                        <h3 className=\"text-xl font-semibold mb-4 text-gray-800\">Instant Speech Conversion!</h3>\r\n                        <p className=\"text-gray-600 mb-4\">\r\n                            Our speech-to-text tool enables you to convert your spoken words into written text quickly and accurately. Click 'Start Recording' to begin, and 'Stop Recording' to finish.\r\n                        </p>\r\n                        <p className=\"text-gray-600\">\r\n                            For any assistance or questions, feel free to <a href=\"mailto:javatp01@gmail.com\" className=\"text-blue-500 hover:underline\">contact us</a>. Weâ€™re here to assist you!\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SpeechToText;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","isRecording","setIsRecording","_useState3","_useState4","text","setText","_useState5","_useState6","error","setError","mediaRecorder","useRef","startRecording","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","stream","wrap","_context2","prev","next","navigator","mediaDevices","getUserMedia","audio","sent","current","MediaRecorder","ondataavailable","_ref2","_callee","event","formData","response","result","_context","data","size","FormData","append","fetch","method","body","ok","Error","json","t0","message","stop","_x","apply","arguments","start","_jsxs","_Fragment","children","Helmet","_jsx","name","content","className","onClick","concat","href"],"sourceRoot":""}