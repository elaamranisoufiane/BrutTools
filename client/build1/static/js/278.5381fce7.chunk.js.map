{"version":3,"file":"static/js/278.5381fce7.chunk.js","mappings":"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","sources":["pages/dashboradGuest/IA/test.js"],"sourcesContent":["//'use client';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nconst DOMAIN_NAME = window.location.origin;\r\nlet selectedfile = null;\r\nlet isProS = null;\r\nlet credits = 100;\r\nlet descBool = null;\r\n\r\n\r\n\r\nconst AIImageGenerator = () => {\r\n    const [plans, setPlans] = useState([]);\r\n    const [plansPayment, setPlansPayment] = useState([]);\r\n    const [showlimitImageSize, setShowlimitImageSize] = useState(false);\r\n\r\n\r\n\r\n    const [showUpgrade, setShowUpgrade] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [displayrenimage, setDisplaygenimage] = useState(true);\r\n    const [datagen, setDataGen] = useState(null);\r\n    const [descfield, setDescfield] = useState('');\r\n    const [descError, setDescError] = useState('');\r\n    //galery images vlaues \r\n\r\n    var [checkpass, setCheckPass] = useState(true);\r\n    var [checkSubscribe, setCheckSubscribe] = useState(true);\r\n\r\n    //initialize \r\n    const initialize = async () => {\r\n        setDataGen(null);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!descfield.trim()) {\r\n            descBool = true;\r\n        } else {\r\n            descBool = false;\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        const myButton = document.getElementById('myButton');\r\n        if (myButton) {\r\n            myButton.addEventListener('click', handleSubmission);\r\n        }\r\n\r\n        return () => {\r\n            if (myButton) {\r\n                myButton.removeEventListener('click', handleSubmission);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n\r\n    let role = \"admin\";\r\n\r\n    //save the new removed background image\r\n    const handleSubmission = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n\r\n\r\n            if (isProS === 'true' && (credits > 0 || role == 'admin')) {\r\n                checkpass = true;\r\n            } else if (credits > 0) {\r\n                checkpass = true;\r\n            } else {\r\n                checkpass = false;\r\n            }\r\n\r\n            console.log(\"test\" + checkpass);\r\n\r\n\r\n            if (descBool) {\r\n                setDescError('The Description is required.');\r\n                return;\r\n            } else {\r\n                setDescError('');\r\n            }\r\n\r\n            if (!checkpass) {\r\n                // setIsLoading(false);\r\n                setShowUpgrade(true);\r\n            }\r\n            else if (checkpass) {\r\n                const displayResults = document.getElementById('displayResults');\r\n                var image_number;\r\n                if (document.getElementById('numberImages') != null) { image_number = document.getElementById('numberImages').value; }\r\n                const promptDesc2 = document.getElementById('desc').value;\r\n                const words = promptDesc2.split(\" \");\r\n                const promptDescDispatched = words.join(\"+\");\r\n                const promptDesc = encodeURIComponent(promptDescDispatched);\r\n\r\n                fetch(`https://repixer.com/api/ai-image-generation-guest?promptDesc=${promptDesc}&image_number=${image_number}`)\r\n                    .then((response) => {\r\n                        if (!response.ok) {\r\n                            throw new Error('Network response was not ok');\r\n                            setDisplaygenimage(false);\r\n\r\n                        }\r\n                        return response.json();\r\n                    })\r\n                    .then(async (responseData) => {\r\n                        responseData.newurl = responseData.newurl.map(url => `https://repixer.com${url}`);\r\n\r\n                        setDataGen(responseData.newurl);\r\n                        //save image \r\n\r\n                        for (let i = 0; i < responseData.newurl.length; i++) {\r\n\r\n                        }\r\n\r\n\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error:', error);\r\n                        setIsLoading(false);\r\n\r\n                    });\r\n                setIsLoading(false);\r\n                setDisplaygenimage(false);\r\n\r\n            }\r\n        } catch (error) {\r\n            console.error('Error uploading image:', error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    //display image uploaded\r\n    if (typeof window !== 'undefined') {\r\n        const imageInput = document.getElementById('dropzone-file');\r\n        const imageView = document.getElementById('imageView');\r\n        const imageContainer = document.getElementById('imageContainer');\r\n        const imagePlaceFree = document.getElementById('imagePlaceFree');\r\n        const imagePlaceFilled = document.getElementById('imagePlaceFilled');\r\n        if (imageInput) {\r\n            imageInput.addEventListener('change', function () {\r\n                const file = imageInput.files[0];\r\n                if (file) {\r\n                    const reader = new FileReader();\r\n\r\n                    reader.onload = function (e) {\r\n                        const imageUrl = e.target.result;\r\n                        imagePlaceFree.style.display = 'none';\r\n                        imagePlaceFilled.style.display = 'block';\r\n                        imageView.src = imageUrl;\r\n                        imageContainer.style.display = 'block';\r\n                    };\r\n                    reader.readAsDataURL(file);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const getCurrentDateTime = () => {\r\n        const now = new Date();\r\n        const year = now.getFullYear();\r\n        const month = String(now.getMonth() + 1).padStart(2, '0');\r\n        const day = String(now.getDate()).padStart(2, '0');\r\n        const hours = String(now.getHours()).padStart(2, '0');\r\n        const minutes = String(now.getMinutes()).padStart(2, '0');\r\n        const seconds = String(now.getSeconds()).padStart(2, '0');\r\n        return `${year}-${month}-${day}_${hours}-${minutes}-${seconds}`;\r\n    };\r\n\r\n    return (\r\n        <main className=\"max-w-3/4 h-full flex  flex-col items-center min-h-screen p-2\">\r\n            <div className=\"container bg-white p-10 rounded-lg  mx-auto flex-col\">\r\n                <h2 className=\"text-2xl font-semibold\">Ai Image General</h2><br></br>\r\n                <div className=\"grid md:grid-cols-1 gap-4\">\r\n                    <div className=\"w-full\">\r\n                        {descError && <p className=\"text-red-500 text-sm mt-2\">{descError}</p>}\r\n                        <textarea onChange={(e) => {\r\n                            setDescfield(e.target.value);\r\n                        }}\r\n                            placeholder=\"Describe image\" id=\"desc\" name=\"desc\" className=\"border rounded-md w-full h-72 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:border-indigo-900 mt-2\" required></textarea>\r\n\r\n                        <select id=\"numberImages\" name=\"numberImages\" className=\"border rounded-md w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:border-indigo-900 mt-2 mb-2\" defaultValue=\"1\">\r\n                            <option value=\"1\" disabled hidden>Number of images to generate</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                        </select>\r\n\r\n\r\n\r\n                        {isProS && !(isProS === 'true') ?\r\n                            (\r\n                                <div id=\"adsDiv1\" className='w-full h-auto bg-red-600'>\r\n                                    <center>↓</center>\r\n                                </div>\r\n                            ) : null}\r\n\r\n\r\n                        {isLoading ? (\r\n                            <button id=\"myButton\" value=\"\" className=\"mt-4 w-full items-center justify-center h-12 px-6 mr-6 font-medium tracking-wide text-white transition duration-200 shadow-md hover:bg-blue-500 focus:shadow-outline focus:outline-none bg-primary-500 rounded\" >\r\n                                <svg aria-hidden=\"true\" className=\"inline w-8 h-8 mr-2 text-gray-200 animate-spin  fill-blue-600\" viewBox=\"0 0 100 101\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\" fill=\"currentColor\" />\r\n                                    <path d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\" fill=\"currentFill\" />\r\n                                </svg>\r\n                            </button>\r\n                        ) : (\r\n                            <button id=\"myButton\" value=\"\" className=\"mt-4 w-full  items-center justify-center h-12 px-6 mr-6 font-medium tracking-wide text-white transition duration-200 shadow-md hover:bg-blue-500 focus:shadow-outline focus:outline-none bg-primary-500 rounded\" >\r\n                                Generate Image\r\n                            </button>\r\n                        )}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div id='displayResults' className='items-center justify-center'>\r\n\r\n                    {datagen ? (\r\n                        <>\r\n                            <h1 className=\"text-2xl font-bold mt-3 text-center\"> Generated Images  </h1>\r\n\r\n                            {isProS && !(isProS === 'true') ?\r\n                                (\r\n                                    <div id=\"adsDiv2\" className='w-full h-auto bg-red-600'>\r\n                                        <center>↓</center>\r\n                                    </div>\r\n                                ) : null}\r\n\r\n                            <div className={`grid md:grid-cols-${datagen.length === 1 ? 1 : datagen.length === 2 ? 2 : datagen.length === 3 ? 3 : datagen.length === 4 ? 4 : 1} gap-1`}>\r\n                                {datagen.map((url, index) => (\r\n                                    <div className=\"relative group flex items-center justify-center container h-100 mt-3\">\r\n\r\n                                        <img key={index} src={url} className=\"h-full object-cover shadow-lg rounded-lg overflow-hidden transition-shadow duration-300 ease-in-out hover:shadow-lg hover:shadow-black/30\" alt={`Processed Image ${index + 1}`} />\r\n                                        <div className=\"absolute bottom-0 right-0 m-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                ))}\r\n\r\n                            </div>\r\n                        </>\r\n                    ) : <div>\r\n                        {!displayrenimage ? (<>\r\n                            <div className=\"w-full max-w-md mx-auto\">\r\n                                <div className=\"flex justify-center items-center h-48\">\r\n                                    <div className=\"animate-spin w-16 h-16 border-t-2 border-blue-500 rounded-full\"></div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </>) : null}\r\n                    </div>}\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {showlimitImageSize ? (\r\n                    <div class=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\r\n                        <div class=\"flex items-center justify-center min-h-screen\">\r\n                            <div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"> </div>\r\n                            <div class=\"bg-white rounded-lg p-8 max-w-md w-full mx-auto shadow-xl z-50\">\r\n                                <div class=\"text-center\">\r\n                                    <div class=\"flex justify-center items-center mb-4\">\r\n                                        <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\">\r\n                                            <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\r\n                                            <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g>\r\n                                            <g id=\"SVGRepo_iconCarrier\">\r\n                                                <title></title>\r\n                                                <g id=\"Complete\">\r\n                                                    <g id=\"alert-circle\">\r\n                                                        <g>\r\n                                                            <line fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"12\" x2=\"12\" y1=\"8\" y2=\"12\"></line>\r\n                                                            <line fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"12\" x2=\"12\" y1=\"16\" y2=\"16\"></line>\r\n                                                            <circle cx=\"12\" cy=\"12\" data-name=\"--Circle\" fill=\"none\" id=\"_--Circle\" r=\"10\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></circle>\r\n                                                        </g>\r\n                                                    </g>\r\n                                                </g>\r\n                                            </g>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <p class=\"text-xl text-gray-800 font-bold mb-2\">Alert! </p>\r\n                                    <p class=\"text-gray-600\">The image size exceeds the limit. Please subscribe to process higher size images.</p>\r\n                                    <div class=\"mt-6\">\r\n                                        <button type=\"button\" class=\"bg-red-500 hover:bg-red-600  py-2 px-4 rounded focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition duration-300 ease-in-out\" onClick={() => setShowlimitImageSize(!showlimitImageSize)}>Close</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <style>{`\r\n\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n        main {\r\n          flex: 1;\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n        \r\n        .footer-content {\r\n          width: 100%;\r\n          border-top: 1px solid #eaeaea;\r\n          display: flex;\r\n          justify-content: space-between; \r\n          align-items: center; \r\n          color: gray;\r\n        }\r\n\r\n        .footer-links {\r\n          text-decoration: none;\r\n          color: gray;\r\n        } \r\n        code {\r\n          background: #fafafa;\r\n          border-radius: 5px;\r\n          padding: 0.75rem;\r\n          font-size: 1.1rem;\r\n          font-family:\r\n            Menlo,\r\n            Monaco,\r\n            Lucida Console,\r\n            Liberation Mono,\r\n            DejaVu Sans Mono,\r\n            Bitstream Vera Sans Mono,\r\n            Courier New,\r\n            monospace;\r\n        }\r\n      `}</style>\r\n\r\n        </main>\r\n\r\n    );\r\n\r\n};\r\nexport default AIImageGenerator; "],"names":["descBool","window","location","origin","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","showlimitImageSize","setShowlimitImageSize","_useState7","_useState8","setShowUpgrade","_useState9","_useState10","isLoading","setIsLoading","_useState11","_useState12","displayrenimage","setDisplaygenimage","_useState13","_useState14","datagen","setDataGen","_useState15","_useState16","descfield","setDescfield","_useState17","_useState18","descError","setDescError","_useState19","_useState20","checkpass","_useState21","_useState22","useEffect","trim","myButton","document","getElementById","addEventListener","handleSubmission","removeEventListener","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","image_number","promptDesc2","words","promptDescDispatched","promptDesc","wrap","_context3","prev","next","console","log","abrupt","value","split","join","encodeURIComponent","fetch","concat","then","response","ok","Error","json","_ref3","_callee2","responseData","i","_context2","newurl","map","url","length","stop","_x","apply","arguments","catch","error","t0","finish","imageInput","imageView","imageContainer","imagePlaceFree","imagePlaceFilled","file","files","reader","FileReader","onload","e","imageUrl","target","result","style","display","src","readAsDataURL","_jsxs","className","children","_jsx","onChange","placeholder","id","name","required","defaultValue","disabled","hidden","viewBox","fill","xmlns","d","_Fragment","index","alt","class","role","width","height","stroke","x1","x2","y1","y2","cx","cy","r","type","onClick"],"sourceRoot":""}