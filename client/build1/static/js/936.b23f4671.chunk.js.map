{"version":3,"file":"static/js/936.b23f4671.chunk.js","mappings":"uJA4FA,UAzFqB,WACjB,IAAAA,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAAiBC,EAAAA,EAAAA,QAAO,MAuC9B,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAACG,EAAAA,EAAM,CAAAD,SAAA,EACHE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,wEACPE,EAAAA,EAAAA,KAAA,QAAMC,KAAK,cAAcC,QAAQ,mIAGrCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,+DAA8DL,UAC1EF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,6DAA4DL,SAAA,EACvEF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,kGAAiGL,SAAA,EAC5GE,EAAAA,EAAAA,KAAA,MAAIG,UAAU,oDAAmDL,SAAC,oBAClEE,EAAAA,EAAAA,KAAA,KAAGG,UAAU,iCAAgCL,SAAC,4HAG9CF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,sCAAqCL,SAAA,EAChDE,EAAAA,EAAAA,KAAA,UACII,QAASpB,EAtBf,WACdU,EAAeW,SACfX,EAAeW,QAAQC,MAE/B,EAnCuB,WACnB,GAAM,4BAA6BC,QAAU,sBAAuBA,OAApE,CAIAd,EAAS,IACT,IACMe,EAAc,IADMD,OAAOE,mBAAqBF,OAAOG,yBAG7DF,EAAYG,KAAO,QACnBH,EAAYI,gBAAiB,EAE7BJ,EAAYK,SAAW,SAACC,GACpB,IAAMC,EAAaD,EAAME,QAAQ,GAAG,GAAGD,WACvC1B,EAAQ0B,EACZ,EAEAP,EAAYS,QAAU,SAACH,GACnBzB,EAAQ,IACRI,EAAS,mBAAqBqB,EAAMtB,MACxC,EAEAgB,EAAYU,MAAQ,WAChBjC,GAAe,EACnB,EAEAS,EAAeW,QAAUG,EACzBA,EAAYW,QACZlC,GAAe,EAxBf,MAFIQ,EAAS,2DA2BjB,EAyB4BU,UAAS,oFAAAiB,OAAsFpC,EAAc,aAAe,IAAKc,SAEhId,EAAc,iBAAmB,oBAErCI,IACGQ,EAAAA,EAAAA,MAAA,OAAKO,UAAU,kCAAiCL,SAAA,EAC5CE,EAAAA,EAAAA,KAAA,MAAIG,UAAU,2CAA0CL,SAAC,uBACzDE,EAAAA,EAAAA,KAAA,KAAGG,UAAU,gBAAeL,SAAEV,OAGrCI,IAASQ,EAAAA,EAAAA,KAAA,KAAGG,UAAU,gCAA+BL,SAAEN,WAIhEI,EAAAA,EAAAA,MAAA,OAAKO,UAAU,sCAAqCL,SAAA,EAChDE,EAAAA,EAAAA,KAAA,MAAIG,UAAU,2CAA0CL,SAAC,gCACzDE,EAAAA,EAAAA,KAAA,KAAGG,UAAU,qBAAoBL,SAAC,kLAGlCF,EAAAA,EAAAA,MAAA,KAAGO,UAAU,gBAAeL,SAAA,CAAC,kDACqBE,EAAAA,EAAAA,KAAA,KAAGqB,KAAK,4BAA4BlB,UAAU,gCAA+BL,SAAC,eAAc,gDAOtK,C","sources":["pages/dashboradGuest/Audio/SpeechToText.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst SpeechToText = () => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [error, setError] = useState('');\r\n    const recognitionRef = useRef(null);\r\n\r\n    const startRecording = () => {\r\n        if (!('webkitSpeechRecognition' in window || 'SpeechRecognition' in window)) {\r\n            setError('Speech Recognition API is not supported in this browser.');\r\n            return;\r\n        }\r\n        setError('');\r\n        const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n        const recognition = new SpeechRecognition();\r\n\r\n        recognition.lang = 'en-US';\r\n        recognition.interimResults = false;\r\n\r\n        recognition.onresult = (event) => {\r\n            const transcript = event.results[0][0].transcript;\r\n            setText(transcript);\r\n        };\r\n\r\n        recognition.onerror = (event) => {\r\n            setText('');\r\n            setError('Error occurred: ' + event.error);\r\n        };\r\n\r\n        recognition.onend = () => {\r\n            setIsRecording(false);\r\n        };\r\n\r\n        recognitionRef.current = recognition;\r\n        recognition.start();\r\n        setIsRecording(true);\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        if (recognitionRef.current) {\r\n            recognitionRef.current.stop();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Free Speech to Text Converter - Convert Your Speech to Text Easily</title>\r\n                <meta name=\"description\" content=\"Convert your speech into text effortlessly with our speech-to-text converter. Experience accurate transcription instantly.\" />\r\n            </Helmet>\r\n\r\n            <main className=\"max-w-3/4 h-full flex flex-col items-center min-h-screen p-2\">\r\n                <div className=\"container bg-white p-2 md:p-10 rounded-lg mx-auto flex-col\">\r\n                    <div className=\"max-w-2xl mx-auto mt-10 p-8 bg-gradient-to-br from-white-900 to-white-800 rounded-xl shadow-2xl\">\r\n                        <h1 className=\"text-4xl font-bold text-center mb-4 text-gray-800\">Speech to Text</h1>\r\n                        <p className=\"text-center text-gray-600 mb-8\">\r\n                            Convert your speech into text with our easy-to-use tool. Start and stop recording to transcribe your speech instantly.\r\n                        </p>\r\n                        <div className=\"text-center flex flex-col space-y-4\">\r\n                            <button\r\n                                onClick={isRecording ? stopRecording : startRecording}\r\n                                className={`w-full bg-main-color hover:bg-blue-300 text-white font-bold py-2 px-4 rounded-lg ${isRecording ? 'bg-red-500' : ''}`}\r\n                            >\r\n                                {isRecording ? 'Stop Recording' : 'Start Recording'}\r\n                            </button>\r\n                            {text && (\r\n                                <div className=\"mt-4 p-4 bg-gray-100 rounded-md\">\r\n                                    <h2 className=\"text-xl font-semibold mb-2 text-gray-800\">Transcribed Text:</h2>\r\n                                    <p className=\"text-gray-800\">{text}</p>\r\n                                </div>\r\n                            )}\r\n                            {error && <p className=\"text-red-500 mt-2 text-center\">{error}</p>}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-10 max-w-2xl mx-auto text-center\">\r\n                        <h3 className=\"text-xl font-semibold mb-4 text-gray-800\">Instant Speech Conversion!</h3>\r\n                        <p className=\"text-gray-600 mb-4\">\r\n                            Our speech-to-text tool enables you to convert your spoken words into written text quickly and accurately. Click 'Start Recording' to begin, and 'Stop Recording' to finish.\r\n                        </p>\r\n                        <p className=\"text-gray-600\">\r\n                            For any assistance or questions, feel free to <a href=\"mailto:javatp01@gmail.com\" className=\"text-blue-500 hover:underline\">contact us</a>. Weâ€™re here to assist you!\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SpeechToText;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","isRecording","setIsRecording","_useState3","_useState4","text","setText","_useState5","_useState6","error","setError","recognitionRef","useRef","_jsxs","_Fragment","children","Helmet","_jsx","name","content","className","onClick","current","stop","window","recognition","SpeechRecognition","webkitSpeechRecognition","lang","interimResults","onresult","event","transcript","results","onerror","onend","start","concat","href"],"sourceRoot":""}